name: Build and Release

on:
  push:
    tags:
      - "v*"
  release:
    types: [created]
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: linux

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 安装 xmake
      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          build-cache: true

      # 安装 LLVM/Clang (Windows)
      - name: Setup LLVM (Windows)
        if: matrix.os == 'windows-latest'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "18.0"

      # 安装 LLVM/Clang (Linux)
      - name: Setup LLVM (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y clang

      # 准备 Windows 特殊依赖
      - name: Prepare Windows Dependencies
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p dependencies/asio
          mkdir -p dependencies/crow

          # 下载 asio
          curl -L -o asio.zip https://github.com/chriskohlhoff/asio/archive/refs/heads/master.zip
          7z x asio.zip -o.
          mv asio-master/asio/include/asio.hpp dependencies/
          mv asio-master/asio/include/asio dependencies/asio

          # 下载 crow
          curl -L -o crow.zip https://github.com/CrowCpp/Crow/archive/refs/heads/master.zip
          7z x crow.zip -o.
          mv Crow-master/include/crow.h dependencies/
          mv Crow-master/include/crow dependencies/crow
        shell: bash

      # 配置并构建 release 版本
      - name: Configure and Build
        run: |
          xmake f -m release -y && xmake build
        shell: bash

      # 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-package
          path: build/*.zip
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure
        run: ls -R

      - name: Read RELEASE_NOTES
        id: release_notes
        run: |
          RELEASE_NOTES=$(cat RELEASE_NOTES.md)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 发布到 GitHub Releases
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
        with:
          name: "Avsb ${{ github.ref_name }}"
          body: |
            # Avsb v${{ github.ref_name }} 发布说明

            ${{ env.RELEASE_NOTES }}
          files: |
            windows-package/*.zip
            linux-package/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
